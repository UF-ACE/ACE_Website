{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport useTranslate from '../i18n/useTranslate';\nimport getFieldLabelTranslationArgs from './getFieldLabelTranslationArgs';\nexport var FieldTitle = function (props) {\n  var resource = props.resource,\n      source = props.source,\n      label = props.label,\n      isRequired = props.isRequired;\n  var translate = useTranslate();\n\n  if (label === false || label === '') {\n    return null;\n  }\n\n  if (label && typeof label !== 'string') {\n    return label;\n  }\n\n  return React.createElement(\"span\", null, translate.apply(void 0, getFieldLabelTranslationArgs({\n    label: label,\n    resource: resource,\n    source: source\n  })), isRequired && ' *');\n}; // What? TypeScript loses the displayName if we don't set it explicitly\n\nFieldTitle.displayName = 'FieldTitle';\nexport default memo(FieldTitle);","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-core/esm/util/FieldTitle.js"],"names":["React","memo","useTranslate","getFieldLabelTranslationArgs","FieldTitle","props","resource","source","label","isRequired","translate","createElement","apply","displayName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,4BAAP,MAAyC,gCAAzC;AACA,OAAO,IAAIC,UAAU,GAAG,UAAUC,KAAV,EAAiB;AACrC,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MAA+BC,MAAM,GAAGF,KAAK,CAACE,MAA9C;AAAA,MAAsDC,KAAK,GAAGH,KAAK,CAACG,KAApE;AAAA,MAA2EC,UAAU,GAAGJ,KAAK,CAACI,UAA9F;AACA,MAAIC,SAAS,GAAGR,YAAY,EAA5B;;AACA,MAAIM,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,EAAjC,EAAqC;AACjC,WAAO,IAAP;AACH;;AACD,MAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACpC,WAAOA,KAAP;AACH;;AACD,SAAQR,KAAK,CAACW,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EACJD,SAAS,CAACE,KAAV,CAAgB,KAAK,CAArB,EAAwBT,4BAA4B,CAAC;AACjDK,IAAAA,KAAK,EAAEA,KAD0C;AAEjDF,IAAAA,QAAQ,EAAEA,QAFuC;AAGjDC,IAAAA,MAAM,EAAEA;AAHyC,GAAD,CAApD,CADI,EAMJE,UAAU,IAAI,IANV,CAAR;AAOH,CAhBM,C,CAiBP;;AACAL,UAAU,CAACS,WAAX,GAAyB,YAAzB;AACA,eAAeZ,IAAI,CAACG,UAAD,CAAnB","sourcesContent":["import * as React from 'react';\nimport { memo } from 'react';\nimport useTranslate from '../i18n/useTranslate';\nimport getFieldLabelTranslationArgs from './getFieldLabelTranslationArgs';\nexport var FieldTitle = function (props) {\n    var resource = props.resource, source = props.source, label = props.label, isRequired = props.isRequired;\n    var translate = useTranslate();\n    if (label === false || label === '') {\n        return null;\n    }\n    if (label && typeof label !== 'string') {\n        return label;\n    }\n    return (React.createElement(\"span\", null,\n        translate.apply(void 0, getFieldLabelTranslationArgs({\n            label: label,\n            resource: resource,\n            source: source,\n        })),\n        isRequired && ' *'));\n};\n// What? TypeScript loses the displayName if we don't set it explicitly\nFieldTitle.displayName = 'FieldTitle';\nexport default memo(FieldTitle);\n"]},"metadata":{},"sourceType":"module"}