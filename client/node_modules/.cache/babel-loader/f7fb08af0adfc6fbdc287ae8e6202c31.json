{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { cloneElement, useCallback, useMemo, useRef } from 'react';\nimport { FormHelperText } from '@material-ui/core';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { ValidationError } from 'ra-core';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useArrayInput } from './useArrayInput';\nimport { useSimpleFormIteratorStyles } from './useSimpleFormIteratorStyles';\nimport { SimpleFormIteratorContext } from './SimpleFormIteratorContext';\nimport { SimpleFormIteratorItem } from './SimpleFormIteratorItem';\nimport { AddItemButton as DefaultAddItemButton } from './AddItemButton';\nimport { RemoveItemButton as DefaultRemoveItemButton } from './RemoveItemButton';\nimport { ReOrderButtons as DefaultReOrderButtons } from './ReOrderButtons';\nexport var SimpleFormIterator = function (props) {\n  var _a = props.addButton,\n      addButton = _a === void 0 ? React.createElement(DefaultAddItemButton, null) : _a,\n      _b = props.removeButton,\n      removeButton = _b === void 0 ? React.createElement(DefaultRemoveItemButton, null) : _b,\n      _c = props.reOrderButtons,\n      reOrderButtons = _c === void 0 ? React.createElement(DefaultReOrderButtons, null) : _c,\n      basePath = props.basePath,\n      children = props.children,\n      className = props.className,\n      record = props.record,\n      resource = props.resource,\n      source = props.source,\n      disabled = props.disabled,\n      disableAdd = props.disableAdd,\n      disableRemove = props.disableRemove,\n      disableReordering = props.disableReordering,\n      variant = props.variant,\n      margin = props.margin,\n      TransitionProps = props.TransitionProps,\n      defaultValue = props.defaultValue,\n      _d = props.getItemLabel,\n      getItemLabel = _d === void 0 ? DefaultLabelFn : _d;\n  var classes = useSimpleFormIteratorStyles(props);\n\n  var _e = useArrayInput(props),\n      fields = _e.fields,\n      meta = _e.meta;\n\n  var error = meta.error,\n      submitFailed = meta.submitFailed;\n  var nodeRef = useRef(null); // We need a unique id for each field for a proper enter/exit animation\n  // so we keep an internal map between the field position and an auto-increment id\n\n  var nextId = useRef(fields && fields.length ? fields.length : defaultValue ? defaultValue.length : 0); // We check whether we have a defaultValue (which must be an array) before checking\n  // the fields prop which will always be empty for a new record.\n  // Without it, our ids wouldn't match the default value and we would get key warnings\n  // on the CssTransition element inside our render method\n\n  var ids = useRef(nextId.current > 0 ? Array.from(Array(nextId.current).keys()) : []);\n  var removeField = useCallback(function (index) {\n    ids.current.splice(index, 1);\n    fields.remove(index);\n  }, [fields]);\n  var addField = useCallback(function (item) {\n    if (item === void 0) {\n      item = undefined;\n    }\n\n    ids.current.push(nextId.current++);\n    fields.push(item);\n  }, [fields]); // add field and call the onClick event of the button passed as addButton prop\n\n  var handleAddButtonClick = function (originalOnClickHandler) {\n    return function (event) {\n      addField();\n\n      if (originalOnClickHandler) {\n        originalOnClickHandler(event);\n      }\n    };\n  };\n\n  var handleReorder = useCallback(function (origin, destination) {\n    var item = ids.current[origin];\n    ids.current[origin] = ids.current[destination];\n    ids.current[destination] = item;\n    fields.move(origin, destination);\n  }, [fields]);\n  var records = get(record, source);\n  var context = useMemo(function () {\n    return {\n      total: fields.length,\n      add: addField,\n      remove: removeField,\n      reOrder: handleReorder\n    };\n  }, [fields.length, addField, removeField, handleReorder]);\n  return fields ? React.createElement(SimpleFormIteratorContext.Provider, {\n    value: context\n  }, React.createElement(\"ul\", {\n    className: classNames(classes.root, className)\n  }, submitFailed && typeof error !== 'object' && error && React.createElement(FormHelperText, {\n    error: true\n  }, React.createElement(ValidationError, {\n    error: error\n  })), React.createElement(TransitionGroup, {\n    component: null\n  }, fields.map(function (member, index) {\n    return React.createElement(CSSTransition, __assign({\n      nodeRef: nodeRef,\n      key: ids.current[index],\n      timeout: 500,\n      classNames: \"fade\"\n    }, TransitionProps), React.createElement(SimpleFormIteratorItem, {\n      basePath: basePath,\n      classes: classes,\n      disabled: disabled,\n      disableRemove: disableRemove,\n      disableReordering: disableReordering,\n      fields: fields,\n      getItemLabel: getItemLabel,\n      index: index,\n      margin: margin,\n      member: member,\n      meta: meta,\n      onRemoveField: removeField,\n      onReorder: handleReorder,\n      record: records && records[index] || {},\n      removeButton: removeButton,\n      reOrderButtons: reOrderButtons,\n      resource: resource,\n      source: source,\n      variant: variant\n    }, children));\n  })), !disabled && !disableAdd && React.createElement(\"li\", {\n    className: classes.line\n  }, React.createElement(\"span\", {\n    className: classes.action\n  }, cloneElement(addButton, {\n    onClick: handleAddButtonClick(addButton.props.onClick),\n    className: classNames('button-add', \"button-add-\" + source)\n  }))))) : null;\n};\nSimpleFormIterator.defaultProps = {\n  disableAdd: false,\n  disableRemove: false\n};\nSimpleFormIterator.propTypes = {\n  defaultValue: PropTypes.any,\n  addButton: PropTypes.element,\n  removeButton: PropTypes.element,\n  basePath: PropTypes.string,\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  // @ts-ignore\n  fields: PropTypes.object,\n  meta: PropTypes.object,\n  // @ts-ignore\n  record: PropTypes.object,\n  source: PropTypes.string,\n  resource: PropTypes.string,\n  translate: PropTypes.func,\n  disableAdd: PropTypes.bool,\n  disableRemove: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  TransitionProps: PropTypes.shape({})\n};\n\nvar DefaultLabelFn = function (index) {\n  return index + 1;\n};","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-ui-materialui/esm/input/ArrayInput/SimpleFormIterator.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","cloneElement","useCallback","useMemo","useRef","FormHelperText","classNames","get","PropTypes","ValidationError","CSSTransition","TransitionGroup","useArrayInput","useSimpleFormIteratorStyles","SimpleFormIteratorContext","SimpleFormIteratorItem","AddItemButton","DefaultAddItemButton","RemoveItemButton","DefaultRemoveItemButton","ReOrderButtons","DefaultReOrderButtons","SimpleFormIterator","props","_a","addButton","createElement","_b","removeButton","_c","reOrderButtons","basePath","children","className","record","resource","source","disabled","disableAdd","disableRemove","disableReordering","variant","margin","TransitionProps","defaultValue","_d","getItemLabel","DefaultLabelFn","classes","_e","fields","meta","error","submitFailed","nodeRef","nextId","ids","current","Array","from","keys","removeField","index","splice","remove","addField","item","undefined","push","handleAddButtonClick","originalOnClickHandler","event","handleReorder","origin","destination","move","records","context","total","add","reOrder","Provider","value","root","component","map","member","key","timeout","onRemoveField","onReorder","line","action","onClick","defaultProps","propTypes","any","element","string","node","object","translate","func","bool","oneOfType","shape"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { cloneElement, useCallback, useMemo, useRef, } from 'react';\nimport { FormHelperText } from '@material-ui/core';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { ValidationError } from 'ra-core';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useArrayInput } from './useArrayInput';\nimport { useSimpleFormIteratorStyles } from './useSimpleFormIteratorStyles';\nimport { SimpleFormIteratorContext } from './SimpleFormIteratorContext';\nimport { SimpleFormIteratorItem, } from './SimpleFormIteratorItem';\nimport { AddItemButton as DefaultAddItemButton } from './AddItemButton';\nimport { RemoveItemButton as DefaultRemoveItemButton } from './RemoveItemButton';\nimport { ReOrderButtons as DefaultReOrderButtons } from './ReOrderButtons';\nexport var SimpleFormIterator = function (props) {\n    var _a = props.addButton, addButton = _a === void 0 ? React.createElement(DefaultAddItemButton, null) : _a, _b = props.removeButton, removeButton = _b === void 0 ? React.createElement(DefaultRemoveItemButton, null) : _b, _c = props.reOrderButtons, reOrderButtons = _c === void 0 ? React.createElement(DefaultReOrderButtons, null) : _c, basePath = props.basePath, children = props.children, className = props.className, record = props.record, resource = props.resource, source = props.source, disabled = props.disabled, disableAdd = props.disableAdd, disableRemove = props.disableRemove, disableReordering = props.disableReordering, variant = props.variant, margin = props.margin, TransitionProps = props.TransitionProps, defaultValue = props.defaultValue, _d = props.getItemLabel, getItemLabel = _d === void 0 ? DefaultLabelFn : _d;\n    var classes = useSimpleFormIteratorStyles(props);\n    var _e = useArrayInput(props), fields = _e.fields, meta = _e.meta;\n    var error = meta.error, submitFailed = meta.submitFailed;\n    var nodeRef = useRef(null);\n    // We need a unique id for each field for a proper enter/exit animation\n    // so we keep an internal map between the field position and an auto-increment id\n    var nextId = useRef(fields && fields.length\n        ? fields.length\n        : defaultValue\n            ? defaultValue.length\n            : 0);\n    // We check whether we have a defaultValue (which must be an array) before checking\n    // the fields prop which will always be empty for a new record.\n    // Without it, our ids wouldn't match the default value and we would get key warnings\n    // on the CssTransition element inside our render method\n    var ids = useRef(nextId.current > 0 ? Array.from(Array(nextId.current).keys()) : []);\n    var removeField = useCallback(function (index) {\n        ids.current.splice(index, 1);\n        fields.remove(index);\n    }, [fields]);\n    var addField = useCallback(function (item) {\n        if (item === void 0) { item = undefined; }\n        ids.current.push(nextId.current++);\n        fields.push(item);\n    }, [fields]);\n    // add field and call the onClick event of the button passed as addButton prop\n    var handleAddButtonClick = function (originalOnClickHandler) { return function (event) {\n        addField();\n        if (originalOnClickHandler) {\n            originalOnClickHandler(event);\n        }\n    }; };\n    var handleReorder = useCallback(function (origin, destination) {\n        var item = ids.current[origin];\n        ids.current[origin] = ids.current[destination];\n        ids.current[destination] = item;\n        fields.move(origin, destination);\n    }, [fields]);\n    var records = get(record, source);\n    var context = useMemo(function () { return ({\n        total: fields.length,\n        add: addField,\n        remove: removeField,\n        reOrder: handleReorder,\n    }); }, [fields.length, addField, removeField, handleReorder]);\n    return fields ? (React.createElement(SimpleFormIteratorContext.Provider, { value: context },\n        React.createElement(\"ul\", { className: classNames(classes.root, className) },\n            submitFailed && typeof error !== 'object' && error && (React.createElement(FormHelperText, { error: true },\n                React.createElement(ValidationError, { error: error }))),\n            React.createElement(TransitionGroup, { component: null }, fields.map(function (member, index) { return (React.createElement(CSSTransition, __assign({ nodeRef: nodeRef, key: ids.current[index], timeout: 500, classNames: \"fade\" }, TransitionProps),\n                React.createElement(SimpleFormIteratorItem, { basePath: basePath, classes: classes, disabled: disabled, disableRemove: disableRemove, disableReordering: disableReordering, fields: fields, getItemLabel: getItemLabel, index: index, margin: margin, member: member, meta: meta, onRemoveField: removeField, onReorder: handleReorder, record: (records && records[index]) || {}, removeButton: removeButton, reOrderButtons: reOrderButtons, resource: resource, source: source, variant: variant }, children))); })),\n            !disabled && !disableAdd && (React.createElement(\"li\", { className: classes.line },\n                React.createElement(\"span\", { className: classes.action }, cloneElement(addButton, {\n                    onClick: handleAddButtonClick(addButton.props.onClick),\n                    className: classNames('button-add', \"button-add-\" + source),\n                }))))))) : null;\n};\nSimpleFormIterator.defaultProps = {\n    disableAdd: false,\n    disableRemove: false,\n};\nSimpleFormIterator.propTypes = {\n    defaultValue: PropTypes.any,\n    addButton: PropTypes.element,\n    removeButton: PropTypes.element,\n    basePath: PropTypes.string,\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    // @ts-ignore\n    fields: PropTypes.object,\n    meta: PropTypes.object,\n    // @ts-ignore\n    record: PropTypes.object,\n    source: PropTypes.string,\n    resource: PropTypes.string,\n    translate: PropTypes.func,\n    disableAdd: PropTypes.bool,\n    disableRemove: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    TransitionProps: PropTypes.shape({}),\n};\nvar DefaultLabelFn = function (index) { return index + 1; };\n"]},"metadata":{},"sourceType":"module"}