{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport InputHelperText from './InputHelperText';\n/**\n * Convert Date object to String\n *\n * @param {Date} value value to convert\n * @returns {String} A standardized date (yyyy-MM-dd), to be passed to an <input type=\"date\" />\n */\n\nvar convertDateToString = function (value) {\n  if (!(value instanceof Date) || isNaN(value.getDate())) return '';\n  var pad = '00';\n  var yyyy = value.getFullYear().toString();\n  var MM = (value.getMonth() + 1).toString();\n  var dd = value.getDate().toString();\n  return yyyy + \"-\" + (pad + MM).slice(-2) + \"-\" + (pad + dd).slice(-2);\n};\n\nvar dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\nvar defaultInputLabelProps = {\n  shrink: true\n};\n\nvar getStringFromDate = function (value) {\n  // null, undefined and empty string values should not go through dateFormatter\n  // otherwise, it returns undefined and will make the input an uncontrolled one.\n  if (value == null || value === '') {\n    return '';\n  }\n\n  if (value instanceof Date) {\n    return convertDateToString(value);\n  } // valid dates should not be converted\n\n\n  if (dateRegex.test(value)) {\n    return value;\n  }\n\n  return convertDateToString(new Date(value));\n};\n/**\n * Form input to edit a Date string value in the \"YYYY-MM-DD\" format (e.g. '2021-06-23').\n *\n * Renders a date picker (the exact UI depends on the browser).\n *\n * @example\n * import { Edit, SimpleForm, DateInput } from 'react-admin';\n *\n * const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <DateInput source=\"published_at\" />\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * // If the initial value is a Date object, DateInput converts it to a string\n * // but you must pass a custom parse method to convert the form value\n * // (which is always a date string) back to a Date object.\n * <DateInput source=\"published_at\" parse={val => new Date(val)} />\n */\n\n\nvar DateInput = function (_a) {\n  var defaultValue = _a.defaultValue,\n      _b = _a.format,\n      format = _b === void 0 ? getStringFromDate : _b,\n      initialValue = _a.initialValue,\n      label = _a.label,\n      name = _a.name,\n      options = _a.options,\n      source = _a.source,\n      resource = _a.resource,\n      helperText = _a.helperText,\n      _c = _a.margin,\n      margin = _c === void 0 ? 'dense' : _c,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      onFocus = _a.onFocus,\n      parse = _a.parse,\n      validate = _a.validate,\n      _d = _a.variant,\n      variant = _d === void 0 ? 'filled' : _d,\n      rest = __rest(_a, [\"defaultValue\", \"format\", \"initialValue\", \"label\", \"name\", \"options\", \"source\", \"resource\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\", \"variant\"]);\n\n  var _e = useInput(__assign({\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: true,\n    initialValue: initialValue,\n    name: name,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _e.id,\n      input = _e.input,\n      isRequired = _e.isRequired,\n      meta = _e.meta;\n\n  var error = meta.error,\n      submitError = meta.submitError,\n      touched = meta.touched;\n  return React.createElement(TextField, __assign({\n    id: id\n  }, input, {\n    // Workaround https://github.com/final-form/react-final-form/issues/529\n    // & https://github.com/final-form/react-final-form/issues/431\n    value: format(input.value) || '',\n    variant: variant,\n    margin: margin,\n    type: \"date\",\n    error: !!(touched && (error || submitError)),\n    helperText: React.createElement(InputHelperText, {\n      touched: touched,\n      error: error || submitError,\n      helperText: helperText\n    }),\n    label: React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource,\n      isRequired: isRequired\n    }),\n    InputLabelProps: defaultInputLabelProps\n  }, options, sanitizeInputRestProps(rest)));\n};\n\nDateInput.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  options: PropTypes.object,\n  resource: PropTypes.string,\n  source: PropTypes.string\n};\nDateInput.defaultProps = {\n  options: {}\n};\nexport default DateInput;","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-ui-materialui/esm/input/DateInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","TextField","useInput","FieldTitle","sanitizeInputRestProps","InputHelperText","convertDateToString","value","Date","isNaN","getDate","pad","yyyy","getFullYear","toString","MM","getMonth","dd","slice","dateRegex","defaultInputLabelProps","shrink","getStringFromDate","test","DateInput","_a","defaultValue","_b","format","initialValue","label","name","options","source","resource","helperText","_c","margin","onBlur","onChange","onFocus","parse","validate","_d","variant","rest","_e","formatOnBlur","id","input","isRequired","meta","error","submitError","touched","createElement","type","InputLabelProps","propTypes","oneOfType","string","bool","object","defaultProps"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport InputHelperText from './InputHelperText';\n/**\n * Convert Date object to String\n *\n * @param {Date} value value to convert\n * @returns {String} A standardized date (yyyy-MM-dd), to be passed to an <input type=\"date\" />\n */\nvar convertDateToString = function (value) {\n    if (!(value instanceof Date) || isNaN(value.getDate()))\n        return '';\n    var pad = '00';\n    var yyyy = value.getFullYear().toString();\n    var MM = (value.getMonth() + 1).toString();\n    var dd = value.getDate().toString();\n    return yyyy + \"-\" + (pad + MM).slice(-2) + \"-\" + (pad + dd).slice(-2);\n};\nvar dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\nvar defaultInputLabelProps = { shrink: true };\nvar getStringFromDate = function (value) {\n    // null, undefined and empty string values should not go through dateFormatter\n    // otherwise, it returns undefined and will make the input an uncontrolled one.\n    if (value == null || value === '') {\n        return '';\n    }\n    if (value instanceof Date) {\n        return convertDateToString(value);\n    }\n    // valid dates should not be converted\n    if (dateRegex.test(value)) {\n        return value;\n    }\n    return convertDateToString(new Date(value));\n};\n/**\n * Form input to edit a Date string value in the \"YYYY-MM-DD\" format (e.g. '2021-06-23').\n *\n * Renders a date picker (the exact UI depends on the browser).\n *\n * @example\n * import { Edit, SimpleForm, DateInput } from 'react-admin';\n *\n * const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <DateInput source=\"published_at\" />\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * // If the initial value is a Date object, DateInput converts it to a string\n * // but you must pass a custom parse method to convert the form value\n * // (which is always a date string) back to a Date object.\n * <DateInput source=\"published_at\" parse={val => new Date(val)} />\n */\nvar DateInput = function (_a) {\n    var defaultValue = _a.defaultValue, _b = _a.format, format = _b === void 0 ? getStringFromDate : _b, initialValue = _a.initialValue, label = _a.label, name = _a.name, options = _a.options, source = _a.source, resource = _a.resource, helperText = _a.helperText, _c = _a.margin, margin = _c === void 0 ? 'dense' : _c, onBlur = _a.onBlur, onChange = _a.onChange, onFocus = _a.onFocus, parse = _a.parse, validate = _a.validate, _d = _a.variant, variant = _d === void 0 ? 'filled' : _d, rest = __rest(_a, [\"defaultValue\", \"format\", \"initialValue\", \"label\", \"name\", \"options\", \"source\", \"resource\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\", \"variant\"]);\n    var _e = useInput(__assign({ defaultValue: defaultValue, format: format, formatOnBlur: true, initialValue: initialValue, name: name, onBlur: onBlur, onChange: onChange, onFocus: onFocus, parse: parse, resource: resource, source: source, validate: validate }, rest)), id = _e.id, input = _e.input, isRequired = _e.isRequired, meta = _e.meta;\n    var error = meta.error, submitError = meta.submitError, touched = meta.touched;\n    return (React.createElement(TextField, __assign({ id: id }, input, { \n        // Workaround https://github.com/final-form/react-final-form/issues/529\n        // & https://github.com/final-form/react-final-form/issues/431\n        value: format(input.value) || '', variant: variant, margin: margin, type: \"date\", error: !!(touched && (error || submitError)), helperText: React.createElement(InputHelperText, { touched: touched, error: error || submitError, helperText: helperText }), label: React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired }), InputLabelProps: defaultInputLabelProps }, options, sanitizeInputRestProps(rest))));\n};\nDateInput.propTypes = {\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n};\nDateInput.defaultProps = {\n    options: {},\n};\nexport default DateInput;\n"]},"metadata":{},"sourceType":"module"}