{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkUpdateWithConfirmButton from './BulkUpdateWithConfirmButton';\nimport BulkUpdateWithUndoButton from './BulkUpdateWithUndoButton';\n/**\n * Updates the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkUpdateButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkUpdateButton label=\"Reset Views\" data={{ views: 0 }} basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\n\nvar BulkUpdateButton = function (props) {\n  var mutationMode = props.mutationMode,\n      rest = __rest(props, [\"mutationMode\"]);\n\n  return mutationMode === 'undoable' ? React.createElement(BulkUpdateWithUndoButton, __assign({}, rest)) : React.createElement(BulkUpdateWithConfirmButton, __assign({\n    mutationMode: mutationMode\n  }, rest));\n};\n\nBulkUpdateButton.propTypes = {\n  basePath: PropTypes.string,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  icon: PropTypes.element\n};\nBulkUpdateButton.defaultProps = {\n  mutationMode: 'undoable',\n  data: []\n};\nexport default BulkUpdateButton;","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-ui-materialui/esm/button/BulkUpdateButton.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","BulkUpdateWithConfirmButton","BulkUpdateWithUndoButton","BulkUpdateButton","props","mutationMode","rest","createElement","propTypes","basePath","string","label","resource","selectedIds","arrayOf","any","oneOf","icon","element","defaultProps","data"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkUpdateWithConfirmButton from './BulkUpdateWithConfirmButton';\nimport BulkUpdateWithUndoButton from './BulkUpdateWithUndoButton';\n/**\n * Updates the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkUpdateButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkUpdateButton label=\"Reset Views\" data={{ views: 0 }} basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nvar BulkUpdateButton = function (props) {\n    var mutationMode = props.mutationMode, rest = __rest(props, [\"mutationMode\"]);\n    return mutationMode === 'undoable' ? (React.createElement(BulkUpdateWithUndoButton, __assign({}, rest))) : (React.createElement(BulkUpdateWithConfirmButton, __assign({ mutationMode: mutationMode }, rest)));\n};\nBulkUpdateButton.propTypes = {\n    basePath: PropTypes.string,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    icon: PropTypes.element,\n};\nBulkUpdateButton.defaultProps = {\n    mutationMode: 'undoable',\n    data: [],\n};\nexport default BulkUpdateButton;\n"]},"metadata":{},"sourceType":"module"}