{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSafeSetState } from '../util/hooks';\nimport useDataProvider from './useDataProvider';\nimport useDataProviderWithDeclarativeSideEffects from './useDataProviderWithDeclarativeSideEffects';\nimport useVersion from '../controller/useVersion';\n/**\n * Call the data provider on mount\n *\n * The return value updates according to the request state:\n *\n * - start: { loading: true, loaded: false, refetch }\n * - success: { data: [data from response], total: [total from response], loading: false, loaded: true, refetch }\n * - error: { error: [error from response], loading: false, loaded: false, refetch }\n *\n * @param {Object} query\n * @param {string} query.type The method called on the data provider, e.g. 'getList', 'getOne'. Can also be a custom method if the dataProvider supports is.\n * @param {string} query.resource A resource name, e.g. 'posts', 'comments'\n * @param {Object} query.payload The payload object, e.g; { post_id: 12 }\n * @param {Object} options\n * @param {string} options.action Redux action type\n * @param {boolean} options.enabled Flag to conditionally run the query. True by default. If it's false, the query will not run\n * @param {Function} options.onSuccess Side effect function to be executed upon success, e.g. () => refresh()\n * @param {Function} options.onFailure Side effect function to be executed upon failure, e.g. (error) => notify(error.message)\n * @param {boolean} options.withDeclarativeSideEffectsSupport Set to true to support legacy side effects e.g. { onSuccess: { refresh: true } }\n *\n * @returns The current request state. Destructure as { data, total, error, loading, loaded, refetch }.\n *\n * @example\n *\n * import { useQuery } from 'react-admin';\n *\n * const UserProfile = ({ record }) => {\n *     const { data, loading, error } = useQuery({\n *         type: 'getOne',\n *         resource: 'users',\n *         payload: { id: record.id }\n *     });\n *     if (loading) { return <Loading />; }\n *     if (error) { return <p>ERROR</p>; }\n *     return <div>User {data.username}</div>;\n * };\n *\n * @example\n *\n * import { useQuery } from 'react-admin';\n *\n * const payload = {\n *    pagination: { page: 1, perPage: 10 },\n *    sort: { field: 'username', order: 'ASC' },\n * };\n * const UserList = () => {\n *     const { data, total, loading, error } = useQuery({\n *         type: 'getList',\n *         resource: 'users',\n *         payload\n *     });\n *     if (loading) { return <Loading />; }\n *     if (error) { return <p>ERROR</p>; }\n *     return (\n *         <div>\n *             <p>Total users: {total}</p>\n *             <ul>\n *                 {data.map(user => <li key={user.username}>{user.username}</li>)}\n *             </ul>\n *         </div>\n *     );\n * };\n */\n\nexport var useQuery = function (query, options) {\n  if (options === void 0) {\n    options = {\n      onSuccess: undefined\n    };\n  }\n\n  var type = query.type,\n      resource = query.resource,\n      payload = query.payload;\n\n  var withDeclarativeSideEffectsSupport = options.withDeclarativeSideEffectsSupport,\n      otherOptions = __rest(options, [\"withDeclarativeSideEffectsSupport\"]);\n\n  var version = useVersion(); // used to allow force reload\n  // used to force a refetch without relying on version\n  // which might trigger other queries as well\n\n  var _a = useState(0),\n      innerVersion = _a[0],\n      setInnerVersion = _a[1];\n\n  var refetch = useCallback(function () {\n    setInnerVersion(function (prevInnerVersion) {\n      return prevInnerVersion + 1;\n    });\n  }, []);\n  var requestSignature = JSON.stringify({\n    query: query,\n    options: otherOptions,\n    version: version,\n    innerVersion: innerVersion\n  });\n\n  var _b = useSafeSetState({\n    data: undefined,\n    error: null,\n    total: null,\n    loading: true,\n    loaded: false,\n    refetch: refetch\n  }),\n      state = _b[0],\n      setState = _b[1];\n\n  var dataProvider = useDataProvider();\n  var dataProviderWithDeclarativeSideEffects = useDataProviderWithDeclarativeSideEffects();\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  useEffect(function () {\n    /**\n     * Support legacy side effects, e.g. { onSuccess: { refresh: true, unSelectAll: true }}\n     *\n     * @deprecated to be removed in 4.0\n     */\n    var finalDataProvider = withDeclarativeSideEffectsSupport ? dataProviderWithDeclarativeSideEffects : dataProvider;\n    setState(function (prevState) {\n      return __assign(__assign({}, prevState), {\n        loading: true\n      });\n    });\n    finalDataProvider[type].apply(finalDataProvider, typeof resource !== 'undefined' ? [resource, payload, otherOptions] : [payload, otherOptions]).then(function (_a) {\n      var data = _a.data,\n          total = _a.total;\n      setState({\n        data: data,\n        total: total,\n        loading: false,\n        loaded: true,\n        refetch: refetch\n      });\n    }).catch(function (error) {\n      setState({\n        error: error,\n        loading: false,\n        loaded: false,\n        refetch: refetch\n      });\n    });\n  }, [requestSignature, dataProvider, dataProviderWithDeclarativeSideEffects, setState]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return state;\n};","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-core/esm/dataProvider/useQuery.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useCallback","useEffect","useState","useSafeSetState","useDataProvider","useDataProviderWithDeclarativeSideEffects","useVersion","useQuery","query","options","onSuccess","undefined","type","resource","payload","withDeclarativeSideEffectsSupport","otherOptions","version","_a","innerVersion","setInnerVersion","refetch","prevInnerVersion","requestSignature","JSON","stringify","_b","data","error","total","loading","loaded","state","setState","dataProvider","dataProviderWithDeclarativeSideEffects","finalDataProvider","prevState","then","catch"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;AAClD,MAAIZ,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIM,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;;AACJ,MAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;AACpE,QAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;AACP;AACL,SAAOF,CAAP;AACH,CAVD;;AAWA,SAASgB,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,yCAAP,MAAsD,6CAAtD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,QAAQ,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAC5C,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG;AAAEC,MAAAA,SAAS,EAAEC;AAAb,KAAV;AAAqC;;AAC/D,MAAIC,IAAI,GAAGJ,KAAK,CAACI,IAAjB;AAAA,MAAuBC,QAAQ,GAAGL,KAAK,CAACK,QAAxC;AAAA,MAAkDC,OAAO,GAAGN,KAAK,CAACM,OAAlE;;AACA,MAAIC,iCAAiC,GAAGN,OAAO,CAACM,iCAAhD;AAAA,MAAmFC,YAAY,GAAGrB,MAAM,CAACc,OAAD,EAAU,CAAC,mCAAD,CAAV,CAAxG;;AACA,MAAIQ,OAAO,GAAGX,UAAU,EAAxB,CAJ4C,CAIhB;AAC5B;AACA;;AACA,MAAIY,EAAE,GAAGhB,QAAQ,CAAC,CAAD,CAAjB;AAAA,MAAsBiB,YAAY,GAAGD,EAAE,CAAC,CAAD,CAAvC;AAAA,MAA4CE,eAAe,GAAGF,EAAE,CAAC,CAAD,CAAhE;;AACA,MAAIG,OAAO,GAAGrB,WAAW,CAAC,YAAY;AAClCoB,IAAAA,eAAe,CAAC,UAAUE,gBAAV,EAA4B;AAAE,aAAOA,gBAAgB,GAAG,CAA1B;AAA8B,KAA7D,CAAf;AACH,GAFwB,EAEtB,EAFsB,CAAzB;AAGA,MAAIC,gBAAgB,GAAGC,IAAI,CAACC,SAAL,CAAe;AAClCjB,IAAAA,KAAK,EAAEA,KAD2B;AAElCC,IAAAA,OAAO,EAAEO,YAFyB;AAGlCC,IAAAA,OAAO,EAAEA,OAHyB;AAIlCE,IAAAA,YAAY,EAAEA;AAJoB,GAAf,CAAvB;;AAMA,MAAIO,EAAE,GAAGvB,eAAe,CAAC;AACrBwB,IAAAA,IAAI,EAAEhB,SADe;AAErBiB,IAAAA,KAAK,EAAE,IAFc;AAGrBC,IAAAA,KAAK,EAAE,IAHc;AAIrBC,IAAAA,OAAO,EAAE,IAJY;AAKrBC,IAAAA,MAAM,EAAE,KALa;AAMrBV,IAAAA,OAAO,EAAEA;AANY,GAAD,CAAxB;AAAA,MAOIW,KAAK,GAAGN,EAAE,CAAC,CAAD,CAPd;AAAA,MAOmBO,QAAQ,GAAGP,EAAE,CAAC,CAAD,CAPhC;;AAQA,MAAIQ,YAAY,GAAG9B,eAAe,EAAlC;AACA,MAAI+B,sCAAsC,GAAG9B,yCAAyC,EAAtF;AACA;;AACAJ,EAAAA,SAAS,CAAC,YAAY;AAClB;AACR;AACA;AACA;AACA;AACQ,QAAImC,iBAAiB,GAAGrB,iCAAiC,GACnDoB,sCADmD,GAEnDD,YAFN;AAGAD,IAAAA,QAAQ,CAAC,UAAUI,SAAV,EAAqB;AAAE,aAAQxD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwD,SAAL,CAAT,EAA0B;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAA1B,CAAhB;AAAgE,KAAxF,CAAR;AACAM,IAAAA,iBAAiB,CAACxB,IAAD,CAAjB,CACKlB,KADL,CACW0C,iBADX,EAC8B,OAAOvB,QAAP,KAAoB,WAApB,GACxB,CAACA,QAAD,EAAWC,OAAX,EAAoBE,YAApB,CADwB,GAExB,CAACF,OAAD,EAAUE,YAAV,CAHN,EAIKsB,IAJL,CAIU,UAAUpB,EAAV,EAAc;AACpB,UAAIS,IAAI,GAAGT,EAAE,CAACS,IAAd;AAAA,UAAoBE,KAAK,GAAGX,EAAE,CAACW,KAA/B;AACAI,MAAAA,QAAQ,CAAC;AACLN,QAAAA,IAAI,EAAEA,IADD;AAELE,QAAAA,KAAK,EAAEA,KAFF;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,MAAM,EAAE,IAJH;AAKLV,QAAAA,OAAO,EAAEA;AALJ,OAAD,CAAR;AAOH,KAbD,EAcKkB,KAdL,CAcW,UAAUX,KAAV,EAAiB;AACxBK,MAAAA,QAAQ,CAAC;AACLL,QAAAA,KAAK,EAAEA,KADF;AAELE,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,MAAM,EAAE,KAHH;AAILV,QAAAA,OAAO,EAAEA;AAJJ,OAAD,CAAR;AAMH,KArBD;AAsBH,GAhCQ,EAgCN,CACCE,gBADD,EAECW,YAFD,EAGCC,sCAHD,EAICF,QAJD,CAhCM,CAAT;AAsCA;;AACA,SAAOD,KAAP;AACH,CApEM","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSafeSetState } from '../util/hooks';\nimport useDataProvider from './useDataProvider';\nimport useDataProviderWithDeclarativeSideEffects from './useDataProviderWithDeclarativeSideEffects';\nimport useVersion from '../controller/useVersion';\n/**\n * Call the data provider on mount\n *\n * The return value updates according to the request state:\n *\n * - start: { loading: true, loaded: false, refetch }\n * - success: { data: [data from response], total: [total from response], loading: false, loaded: true, refetch }\n * - error: { error: [error from response], loading: false, loaded: false, refetch }\n *\n * @param {Object} query\n * @param {string} query.type The method called on the data provider, e.g. 'getList', 'getOne'. Can also be a custom method if the dataProvider supports is.\n * @param {string} query.resource A resource name, e.g. 'posts', 'comments'\n * @param {Object} query.payload The payload object, e.g; { post_id: 12 }\n * @param {Object} options\n * @param {string} options.action Redux action type\n * @param {boolean} options.enabled Flag to conditionally run the query. True by default. If it's false, the query will not run\n * @param {Function} options.onSuccess Side effect function to be executed upon success, e.g. () => refresh()\n * @param {Function} options.onFailure Side effect function to be executed upon failure, e.g. (error) => notify(error.message)\n * @param {boolean} options.withDeclarativeSideEffectsSupport Set to true to support legacy side effects e.g. { onSuccess: { refresh: true } }\n *\n * @returns The current request state. Destructure as { data, total, error, loading, loaded, refetch }.\n *\n * @example\n *\n * import { useQuery } from 'react-admin';\n *\n * const UserProfile = ({ record }) => {\n *     const { data, loading, error } = useQuery({\n *         type: 'getOne',\n *         resource: 'users',\n *         payload: { id: record.id }\n *     });\n *     if (loading) { return <Loading />; }\n *     if (error) { return <p>ERROR</p>; }\n *     return <div>User {data.username}</div>;\n * };\n *\n * @example\n *\n * import { useQuery } from 'react-admin';\n *\n * const payload = {\n *    pagination: { page: 1, perPage: 10 },\n *    sort: { field: 'username', order: 'ASC' },\n * };\n * const UserList = () => {\n *     const { data, total, loading, error } = useQuery({\n *         type: 'getList',\n *         resource: 'users',\n *         payload\n *     });\n *     if (loading) { return <Loading />; }\n *     if (error) { return <p>ERROR</p>; }\n *     return (\n *         <div>\n *             <p>Total users: {total}</p>\n *             <ul>\n *                 {data.map(user => <li key={user.username}>{user.username}</li>)}\n *             </ul>\n *         </div>\n *     );\n * };\n */\nexport var useQuery = function (query, options) {\n    if (options === void 0) { options = { onSuccess: undefined }; }\n    var type = query.type, resource = query.resource, payload = query.payload;\n    var withDeclarativeSideEffectsSupport = options.withDeclarativeSideEffectsSupport, otherOptions = __rest(options, [\"withDeclarativeSideEffectsSupport\"]);\n    var version = useVersion(); // used to allow force reload\n    // used to force a refetch without relying on version\n    // which might trigger other queries as well\n    var _a = useState(0), innerVersion = _a[0], setInnerVersion = _a[1];\n    var refetch = useCallback(function () {\n        setInnerVersion(function (prevInnerVersion) { return prevInnerVersion + 1; });\n    }, []);\n    var requestSignature = JSON.stringify({\n        query: query,\n        options: otherOptions,\n        version: version,\n        innerVersion: innerVersion,\n    });\n    var _b = useSafeSetState({\n        data: undefined,\n        error: null,\n        total: null,\n        loading: true,\n        loaded: false,\n        refetch: refetch,\n    }), state = _b[0], setState = _b[1];\n    var dataProvider = useDataProvider();\n    var dataProviderWithDeclarativeSideEffects = useDataProviderWithDeclarativeSideEffects();\n    /* eslint-disable react-hooks/exhaustive-deps */\n    useEffect(function () {\n        /**\n         * Support legacy side effects, e.g. { onSuccess: { refresh: true, unSelectAll: true }}\n         *\n         * @deprecated to be removed in 4.0\n         */\n        var finalDataProvider = withDeclarativeSideEffectsSupport\n            ? dataProviderWithDeclarativeSideEffects\n            : dataProvider;\n        setState(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });\n        finalDataProvider[type]\n            .apply(finalDataProvider, typeof resource !== 'undefined'\n            ? [resource, payload, otherOptions]\n            : [payload, otherOptions])\n            .then(function (_a) {\n            var data = _a.data, total = _a.total;\n            setState({\n                data: data,\n                total: total,\n                loading: false,\n                loaded: true,\n                refetch: refetch,\n            });\n        })\n            .catch(function (error) {\n            setState({\n                error: error,\n                loading: false,\n                loaded: false,\n                refetch: refetch,\n            });\n        });\n    }, [\n        requestSignature,\n        dataProvider,\n        dataProviderWithDeclarativeSideEffects,\n        setState,\n    ]);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    return state;\n};\n"]},"metadata":{},"sourceType":"module"}