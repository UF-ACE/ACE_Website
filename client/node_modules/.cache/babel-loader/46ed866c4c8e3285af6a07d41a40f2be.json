{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport get from 'lodash/get';\nimport { useGetMany } from '../../dataProvider';\nimport { useNotify } from '../../sideEffect';\nimport { useResourceContext } from '../../core';\nimport { useList } from '../useList';\nvar emptyArray = [];\nvar defaultFilter = {};\nvar defaultSort = {\n  field: null,\n  order: null\n};\n/**\n * Hook that fetches records from another resource specified\n * by an array of *ids* in current record.\n *\n * @example\n *\n * const { ids, data, error, loaded, loading, referenceBasePath } = useReferenceArrayFieldController({\n *      basePath: 'resource';\n *      record: { referenceIds: ['id1', 'id2']};\n *      reference: 'reference';\n *      resource: 'resource';\n *      source: 'referenceIds';\n * });\n *\n * @param {Object} props\n * @param {string} props.basePath basepath to current resource\n * @param {Object} props.record The current resource record\n * @param {string} props.reference The linked resource name\n * @param {string} props.resource The current resource name\n * @param {string} props.source The key of the linked resource identifier\n *\n * @param {Props} props\n *\n * @returns {ReferenceArrayProps} The reference props\n */\n\nvar useReferenceArrayFieldController = function (props) {\n  var basePath = props.basePath,\n      _a = props.filter,\n      filter = _a === void 0 ? defaultFilter : _a,\n      _b = props.page,\n      page = _b === void 0 ? 1 : _b,\n      _c = props.perPage,\n      perPage = _c === void 0 ? 1000 : _c,\n      record = props.record,\n      reference = props.reference,\n      _d = props.sort,\n      sort = _d === void 0 ? defaultSort : _d,\n      source = props.source;\n  var resource = useResourceContext(props);\n  var notify = useNotify();\n  var ids = get(record, source) || emptyArray;\n\n  var _e = useGetMany(reference, ids, {\n    onFailure: function (error) {\n      return notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning', {\n        _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n      });\n    }\n  }),\n      data = _e.data,\n      error = _e.error,\n      loading = _e.loading,\n      loaded = _e.loaded,\n      refetch = _e.refetch;\n\n  var listProps = useList({\n    data: data,\n    error: error,\n    filter: filter,\n    ids: ids,\n    loaded: loaded,\n    loading: loading,\n    page: page,\n    perPage: perPage,\n    sort: sort\n  });\n  return __assign(__assign({\n    basePath: basePath ? basePath.replace(resource, reference) : \"/\" + reference\n  }, listProps), {\n    defaultTitle: null,\n    hasCreate: false,\n    refetch: refetch,\n    resource: reference\n  });\n};\n\nexport default useReferenceArrayFieldController;","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-core/esm/controller/field/useReferenceArrayFieldController.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","get","useGetMany","useNotify","useResourceContext","useList","emptyArray","defaultFilter","defaultSort","field","order","useReferenceArrayFieldController","props","basePath","_a","filter","_b","page","_c","perPage","record","reference","_d","sort","source","resource","notify","ids","_e","onFailure","error","message","_","undefined","data","loading","loaded","refetch","listProps","replace","defaultTitle","hasCreate"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport get from 'lodash/get';\nimport { useGetMany } from '../../dataProvider';\nimport { useNotify } from '../../sideEffect';\nimport { useResourceContext } from '../../core';\nimport { useList } from '../useList';\nvar emptyArray = [];\nvar defaultFilter = {};\nvar defaultSort = { field: null, order: null };\n/**\n * Hook that fetches records from another resource specified\n * by an array of *ids* in current record.\n *\n * @example\n *\n * const { ids, data, error, loaded, loading, referenceBasePath } = useReferenceArrayFieldController({\n *      basePath: 'resource';\n *      record: { referenceIds: ['id1', 'id2']};\n *      reference: 'reference';\n *      resource: 'resource';\n *      source: 'referenceIds';\n * });\n *\n * @param {Object} props\n * @param {string} props.basePath basepath to current resource\n * @param {Object} props.record The current resource record\n * @param {string} props.reference The linked resource name\n * @param {string} props.resource The current resource name\n * @param {string} props.source The key of the linked resource identifier\n *\n * @param {Props} props\n *\n * @returns {ReferenceArrayProps} The reference props\n */\nvar useReferenceArrayFieldController = function (props) {\n    var basePath = props.basePath, _a = props.filter, filter = _a === void 0 ? defaultFilter : _a, _b = props.page, page = _b === void 0 ? 1 : _b, _c = props.perPage, perPage = _c === void 0 ? 1000 : _c, record = props.record, reference = props.reference, _d = props.sort, sort = _d === void 0 ? defaultSort : _d, source = props.source;\n    var resource = useResourceContext(props);\n    var notify = useNotify();\n    var ids = get(record, source) || emptyArray;\n    var _e = useGetMany(reference, ids, {\n        onFailure: function (error) {\n            return notify(typeof error === 'string'\n                ? error\n                : error.message || 'ra.notification.http_error', 'warning', {\n                _: typeof error === 'string'\n                    ? error\n                    : error && error.message\n                        ? error.message\n                        : undefined,\n            });\n        },\n    }), data = _e.data, error = _e.error, loading = _e.loading, loaded = _e.loaded, refetch = _e.refetch;\n    var listProps = useList({\n        data: data,\n        error: error,\n        filter: filter,\n        ids: ids,\n        loaded: loaded,\n        loading: loading,\n        page: page,\n        perPage: perPage,\n        sort: sort,\n    });\n    return __assign(__assign({ basePath: basePath\n            ? basePath.replace(resource, reference)\n            : \"/\" + reference }, listProps), { defaultTitle: null, hasCreate: false, refetch: refetch, resource: reference });\n};\nexport default useReferenceArrayFieldController;\n"]},"metadata":{},"sourceType":"module"}