{"ast":null,"code":"import * as React from 'react';\nimport AdminContext from './AdminContext';\nimport AdminUI from './AdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\nimport { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\n\nvar Admin = function (props) {\n  var appLayout = props.appLayout,\n      authProvider = props.authProvider,\n      catchAll = props.catchAll,\n      children = props.children,\n      customReducers = props.customReducers,\n      _a = props.customRoutes,\n      customRoutes = _a === void 0 ? [] : _a,\n      customSagas = props.customSagas,\n      dashboard = props.dashboard,\n      dataProvider = props.dataProvider,\n      disableTelemetry = props.disableTelemetry,\n      history = props.history,\n      i18nProvider = props.i18nProvider,\n      initialState = props.initialState,\n      layout = props.layout,\n      loading = props.loading,\n      locale = props.locale,\n      loginPage = props.loginPage,\n      logoutButton = props.logoutButton,\n      menu = props.menu,\n      // deprecated, use a custom layout instead\n  ready = props.ready,\n      theme = props.theme,\n      _b = props.title,\n      title = _b === void 0 ? 'React Admin' : _b;\n\n  if (appLayout && process.env.NODE_ENV !== 'production') {\n    console.warn('You are using deprecated prop \"appLayout\", it was replaced by \"layout\", see https://github.com/marmelab/react-admin/issues/2918');\n  }\n\n  if (loginPage === true && process.env.NODE_ENV !== 'production') {\n    console.warn('You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it');\n  }\n\n  if (locale && process.env.NODE_ENV !== 'production') {\n    console.warn('You are using deprecated prop \"locale\". You must now pass the initial locale to your i18nProvider');\n  }\n\n  return React.createElement(AdminContext, {\n    authProvider: authProvider,\n    dataProvider: dataProvider,\n    i18nProvider: i18nProvider,\n    history: history,\n    customReducers: customReducers,\n    customSagas: customSagas,\n    initialState: initialState\n  }, React.createElement(AdminUI, {\n    layout: appLayout || layout,\n    customRoutes: customRoutes,\n    dashboard: dashboard,\n    disableTelemetry: disableTelemetry,\n    menu: menu,\n    catchAll: catchAll,\n    theme: theme,\n    title: title,\n    loading: loading,\n    loginPage: loginPage,\n    logout: authProvider ? logoutButton : undefined,\n    ready: ready\n  }, children));\n};\n\nexport default Admin;","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/react-admin/esm/Admin.js"],"names":["React","AdminContext","AdminUI","Admin","props","appLayout","authProvider","catchAll","children","customReducers","_a","customRoutes","customSagas","dashboard","dataProvider","disableTelemetry","history","i18nProvider","initialState","layout","loading","locale","loginPage","logoutButton","menu","ready","theme","_b","title","process","env","NODE_ENV","console","warn","createElement","logout","undefined"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport AdminContext from './AdminContext';\nimport AdminUI from './AdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\nimport { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\nvar Admin = function (props) {\n    var appLayout = props.appLayout, authProvider = props.authProvider, catchAll = props.catchAll, children = props.children, customReducers = props.customReducers, _a = props.customRoutes, customRoutes = _a === void 0 ? [] : _a, customSagas = props.customSagas, dashboard = props.dashboard, dataProvider = props.dataProvider, disableTelemetry = props.disableTelemetry, history = props.history, i18nProvider = props.i18nProvider, initialState = props.initialState, layout = props.layout, loading = props.loading, locale = props.locale, loginPage = props.loginPage, logoutButton = props.logoutButton, menu = props.menu, // deprecated, use a custom layout instead\n    ready = props.ready, theme = props.theme, _b = props.title, title = _b === void 0 ? 'React Admin' : _b;\n    if (appLayout && process.env.NODE_ENV !== 'production') {\n        console.warn('You are using deprecated prop \"appLayout\", it was replaced by \"layout\", see https://github.com/marmelab/react-admin/issues/2918');\n    }\n    if (loginPage === true && process.env.NODE_ENV !== 'production') {\n        console.warn('You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it');\n    }\n    if (locale && process.env.NODE_ENV !== 'production') {\n        console.warn('You are using deprecated prop \"locale\". You must now pass the initial locale to your i18nProvider');\n    }\n    return (React.createElement(AdminContext, { authProvider: authProvider, dataProvider: dataProvider, i18nProvider: i18nProvider, history: history, customReducers: customReducers, customSagas: customSagas, initialState: initialState },\n        React.createElement(AdminUI, { layout: appLayout || layout, customRoutes: customRoutes, dashboard: dashboard, disableTelemetry: disableTelemetry, menu: menu, catchAll: catchAll, theme: theme, title: title, loading: loading, loginPage: loginPage, logout: authProvider ? logoutButton : undefined, ready: ready }, children)));\n};\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}