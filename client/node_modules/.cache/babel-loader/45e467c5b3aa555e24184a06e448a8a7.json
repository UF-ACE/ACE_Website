{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { useTranslate } from 'ra-core';\n/**\n * An IconButton with a tooltip which ensures the tooltip is closed on click to avoid ghost tooltips\n * when the button position changes.\n */\n\nexport var IconButtonWithTooltip = function (_a) {\n  var label = _a.label,\n      onClick = _a.onClick,\n      props = __rest(_a, [\"label\", \"onClick\"]);\n\n  var translate = useTranslate();\n\n  var _b = React.useState(false),\n      open = _b[0],\n      setOpen = _b[1];\n\n  var handleClose = function () {\n    setOpen(false);\n  };\n\n  var handleOpen = function () {\n    setOpen(true);\n  };\n\n  var translatedLabel = translate(label, {\n    _: label\n  });\n\n  var handleClick = function (event) {\n    handleClose();\n    onClick(event);\n  };\n\n  return React.createElement(Tooltip, {\n    title: translatedLabel,\n    open: open,\n    onOpen: handleOpen,\n    onClose: handleClose\n  }, React.createElement(IconButton, __assign({\n    \"aria-label\": translatedLabel,\n    onClick: handleClick\n  }, props)));\n};","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-ui-materialui/esm/button/IconButtonWithTooltip.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","IconButton","Tooltip","useTranslate","IconButtonWithTooltip","_a","label","onClick","props","translate","_b","useState","open","setOpen","handleClose","handleOpen","translatedLabel","_","handleClick","event","createElement","title","onOpen","onClose"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { useTranslate } from 'ra-core';\n/**\n * An IconButton with a tooltip which ensures the tooltip is closed on click to avoid ghost tooltips\n * when the button position changes.\n */\nexport var IconButtonWithTooltip = function (_a) {\n    var label = _a.label, onClick = _a.onClick, props = __rest(_a, [\"label\", \"onClick\"]);\n    var translate = useTranslate();\n    var _b = React.useState(false), open = _b[0], setOpen = _b[1];\n    var handleClose = function () {\n        setOpen(false);\n    };\n    var handleOpen = function () {\n        setOpen(true);\n    };\n    var translatedLabel = translate(label, { _: label });\n    var handleClick = function (event) {\n        handleClose();\n        onClick(event);\n    };\n    return (React.createElement(Tooltip, { title: translatedLabel, open: open, onOpen: handleOpen, onClose: handleClose },\n        React.createElement(IconButton, __assign({ \"aria-label\": translatedLabel, onClick: handleClick }, props))));\n};\n"]},"metadata":{},"sourceType":"module"}