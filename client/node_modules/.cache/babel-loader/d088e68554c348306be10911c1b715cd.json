{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkDeleteWithConfirmButton from './BulkDeleteWithConfirmButton';\nimport BulkDeleteWithUndoButton from './BulkDeleteWithUndoButton';\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\n\nvar BulkDeleteButton = function (props) {\n  return props.undoable ? React.createElement(BulkDeleteWithUndoButton, __assign({}, props)) : React.createElement(BulkDeleteWithConfirmButton, __assign({}, props));\n};\n\nBulkDeleteButton.propTypes = {\n  basePath: PropTypes.string,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  undoable: PropTypes.bool,\n  icon: PropTypes.element\n};\nBulkDeleteButton.defaultProps = {\n  undoable: true\n};\nexport default BulkDeleteButton;","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-ui-materialui/esm/button/BulkDeleteButton.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","PropTypes","BulkDeleteWithConfirmButton","BulkDeleteWithUndoButton","BulkDeleteButton","props","undoable","createElement","propTypes","basePath","string","label","resource","selectedIds","arrayOf","any","bool","icon","element","defaultProps"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAG,UAAUC,KAAV,EAAiB;AACpC,SAAOA,KAAK,CAACC,QAAN,GAAkBN,KAAK,CAACO,aAAN,CAAoBJ,wBAApB,EAA8CjB,QAAQ,CAAC,EAAD,EAAKmB,KAAL,CAAtD,CAAlB,GAAyFL,KAAK,CAACO,aAAN,CAAoBL,2BAApB,EAAiDhB,QAAQ,CAAC,EAAD,EAAKmB,KAAL,CAAzD,CAAhG;AACH,CAFD;;AAGAD,gBAAgB,CAACI,SAAjB,GAA6B;AACzBC,EAAAA,QAAQ,EAAER,SAAS,CAACS,MADK;AAEzBC,EAAAA,KAAK,EAAEV,SAAS,CAACS,MAFQ;AAGzBE,EAAAA,QAAQ,EAAEX,SAAS,CAACS,MAHK;AAIzBG,EAAAA,WAAW,EAAEZ,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,GAA5B,CAJY;AAKzBT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IALK;AAMzBC,EAAAA,IAAI,EAAEhB,SAAS,CAACiB;AANS,CAA7B;AAQAd,gBAAgB,CAACe,YAAjB,GAAgC;AAC5Bb,EAAAA,QAAQ,EAAE;AADkB,CAAhC;AAGA,eAAeF,gBAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkDeleteWithConfirmButton from './BulkDeleteWithConfirmButton';\nimport BulkDeleteWithUndoButton from './BulkDeleteWithUndoButton';\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nvar BulkDeleteButton = function (props) {\n    return props.undoable ? (React.createElement(BulkDeleteWithUndoButton, __assign({}, props))) : (React.createElement(BulkDeleteWithConfirmButton, __assign({}, props)));\n};\nBulkDeleteButton.propTypes = {\n    basePath: PropTypes.string,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    undoable: PropTypes.bool,\n    icon: PropTypes.element,\n};\nBulkDeleteButton.defaultProps = {\n    undoable: true,\n};\nexport default BulkDeleteButton;\n"]},"metadata":{},"sourceType":"module"}