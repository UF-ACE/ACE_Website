{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { parsePath } from 'history';\nimport resolveRedirectTo from '../util/resolveRedirectTo';\nimport { refreshView } from '../actions/uiActions';\n/**\n * Hook for Redirection Side Effect\n *\n * @example\n *\n * const redirect = useRedirect();\n * // redirect to list view\n * redirect('list', '/posts');\n * // redirect to edit view\n * redirect('edit', '/posts', 123);\n * // redirect to edit view with state data\n * redirect('edit', '/comment', 123, {}, { record: { post_id: record.id } });\n * // do not redirect (resets the record form)\n * redirect(false);\n * // redirect to the result of a function\n * redirect((redirectTo, basePath, id, data) => ...)\n */\n\nvar useRedirect = function () {\n  var dispatch = useDispatch();\n  var history = useHistory(); // Note: history is mutable. This prevents render loops in useCallback.\n\n  return useCallback(function (redirectTo, basePath, id, data, state) {\n    if (basePath === void 0) {\n      basePath = '';\n    }\n\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (!redirectTo) {\n      if (history.location.state || history.location.search) {\n        history.replace(__assign(__assign({}, history.location), {\n          state: state,\n          search: undefined\n        }));\n      } else {\n        dispatch(refreshView());\n      }\n\n      return;\n    }\n\n    if (typeof redirectTo === 'string' && redirectTo.startsWith('http') && window) {\n      // redirection to an absolute url\n      // history doesn't handle that case, so we handle it by hand\n      window.location.href = redirectTo;\n    } else {\n      history.push(__assign(__assign({}, parsePath(resolveRedirectTo(redirectTo, basePath, id, data))), {\n        state: __assign({\n          _scrollToTop: true\n        }, state)\n      }));\n    }\n  }, [dispatch, history]);\n};\n\nexport default useRedirect;","map":{"version":3,"sources":["/Users/cameronkeene/Documents/GitHub/ACE_Website/client/node_modules/ra-core/esm/sideEffect/useRedirect.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useCallback","useDispatch","useHistory","parsePath","resolveRedirectTo","refreshView","useRedirect","dispatch","history","redirectTo","basePath","id","data","state","location","search","replace","undefined","startsWith","window","href","push","_scrollToTop"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { parsePath } from 'history';\nimport resolveRedirectTo from '../util/resolveRedirectTo';\nimport { refreshView } from '../actions/uiActions';\n/**\n * Hook for Redirection Side Effect\n *\n * @example\n *\n * const redirect = useRedirect();\n * // redirect to list view\n * redirect('list', '/posts');\n * // redirect to edit view\n * redirect('edit', '/posts', 123);\n * // redirect to edit view with state data\n * redirect('edit', '/comment', 123, {}, { record: { post_id: record.id } });\n * // do not redirect (resets the record form)\n * redirect(false);\n * // redirect to the result of a function\n * redirect((redirectTo, basePath, id, data) => ...)\n */\nvar useRedirect = function () {\n    var dispatch = useDispatch();\n    var history = useHistory(); // Note: history is mutable. This prevents render loops in useCallback.\n    return useCallback(function (redirectTo, basePath, id, data, state) {\n        if (basePath === void 0) { basePath = ''; }\n        if (state === void 0) { state = {}; }\n        if (!redirectTo) {\n            if (history.location.state || history.location.search) {\n                history.replace(__assign(__assign({}, history.location), { state: state, search: undefined }));\n            }\n            else {\n                dispatch(refreshView());\n            }\n            return;\n        }\n        if (typeof redirectTo === 'string' &&\n            redirectTo.startsWith('http') &&\n            window) {\n            // redirection to an absolute url\n            // history doesn't handle that case, so we handle it by hand\n            window.location.href = redirectTo;\n        }\n        else {\n            history.push(__assign(__assign({}, parsePath(resolveRedirectTo(redirectTo, basePath, id, data))), { state: __assign({ _scrollToTop: true }, state) }));\n        }\n    }, [dispatch, history]);\n};\nexport default useRedirect;\n"]},"metadata":{},"sourceType":"module"}