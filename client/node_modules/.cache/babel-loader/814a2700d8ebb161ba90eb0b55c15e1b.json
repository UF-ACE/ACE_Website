{"ast":null,"code":"var _jsxFileName = \"/Users/jakerichard/Desktop/ACE_Website/client/src/pages/OfficerInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport firebase from \"./firebase\";\nimport \"./OfficerInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OfficerInput = ({\n  officer\n}) => {\n  _s();\n\n  const [name, setName] = React.useState(officer.name);\n  const [role, setRole] = React.useState(officer.role);\n  const [email, setEmail] = React.useState(officer.email);\n  const [linkedin, setLinkedin] = React.useState(officer.linkedin);\n  const [fileUrl, setFileUrl] = React.useState(officer.fileUrl);\n\n  const onUpdate = () => {\n    console.log(fileUrl);\n\n    if (fileUrl != null) {\n      const db = firebase.firestore(); // need way to store previous name\n\n      db.collection(\"officers\").doc(officer.id).set({\n        name: name,\n        role: role,\n        email: email,\n        linkedin: linkedin,\n        avatar: fileUrl\n      });\n    } else {\n      console.log(\"fileURL == null\");\n      const db = firebase.firestore();\n      const docRef = db.collection(\"officers\").doc(officer.id);\n      docRef.get().then(doc => {\n        if (doc.exists) {\n          // console.log(\"avatar data:\", doc.data().avatar);\n          // console.log(\"Document data:\", doc.data());\n          db.collection(\"officers\").doc(officer.id).set({\n            name: name,\n            role: role,\n            email: email,\n            linkedin: linkedin,\n            avatar: doc.data().avatar\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      }).catch(error => {\n        console.log(\"Error getting document:\", error);\n      });\n    }\n  };\n\n  const onDelete = () => {\n    const db = firebase.firestore();\n    db.collection('officers').doc(officer.id).delete();\n  }; // for file upload\n\n\n  const onFileChange = async e => {\n    const file = e.target.files[0];\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    setFileUrl(await fileRef.getDownloadURL());\n    console.log(fileRef.getDownloadURL());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"officer_input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: role,\n      onChange: e => {\n        setRole(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => {\n        setEmail(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: linkedin,\n      onChange: e => {\n        setLinkedin(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUpdate,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDelete,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n};\n\n_s(OfficerInput, \"GTDxk6c6KkrZG35cV6BfpH3DggM=\");\n\n_c = OfficerInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"OfficerInput\");","map":{"version":3,"sources":["/Users/jakerichard/Desktop/ACE_Website/client/src/pages/OfficerInput.js"],"names":["React","firebase","OfficerInput","officer","name","setName","useState","role","setRole","email","setEmail","linkedin","setLinkedin","fileUrl","setFileUrl","onUpdate","console","log","db","firestore","collection","doc","id","set","avatar","docRef","get","then","exists","data","catch","error","onDelete","delete","onFileChange","e","file","target","files","storageRef","storage","ref","fileRef","child","put","getDownloadURL","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase from \"./firebase\";\nimport \"./OfficerInput.css\"\n\nexport const OfficerInput = ({officer}) => {\n    const [name, setName] = React.useState(officer.name);\n    const [role, setRole] = React.useState(officer.role);\n    const [email, setEmail] = React.useState(officer.email);\n    const [linkedin, setLinkedin] = React.useState(officer.linkedin);\n    const [fileUrl, setFileUrl] = React.useState(officer.fileUrl);\n\n\n    const onUpdate = () => {\n        console.log(fileUrl);\n        if (fileUrl != null){\n            const db = firebase.firestore();\n            // need way to store previous name\n            db.collection(\"officers\").doc(officer.id).set({\n                name: name,\n                role: role,\n                email: email,\n                linkedin: linkedin,\n                avatar: fileUrl,\n            });\n        }\n        else{\n            console.log(\"fileURL == null\")\n            const db = firebase.firestore();\n            const docRef = db.collection(\"officers\").doc(officer.id);\n            docRef.get().then((doc) => {\n                if (doc.exists) {\n                    // console.log(\"avatar data:\", doc.data().avatar);\n                    // console.log(\"Document data:\", doc.data());\n                    db.collection(\"officers\").doc(officer.id).set({\n                        name: name,\n                        role: role,\n                        email: email,\n                        linkedin: linkedin,\n                        avatar: doc.data().avatar,\n                    });\n                } else {\n                    // doc.data() will be undefined in this case\n                    console.log(\"No such document!\");\n                }\n            }).catch((error) => {\n                console.log(\"Error getting document:\", error);\n            });\n        }\n        \n    }\n\n    const onDelete = () => {\n        const db = firebase.firestore();\n        db.collection('officers').doc(officer.id).delete();\n    }\n    // for file upload\n    const onFileChange = async (e) =>{\n        const file = e.target.files[0];\n        const storageRef = firebase.storage().ref();\n        const fileRef = storageRef.child(file.name);\n        await fileRef.put(file);\n        setFileUrl( await fileRef.getDownloadURL());\n        console.log(fileRef.getDownloadURL());\n      }\n\n    return (<div className = \"officer_input\">\n        <input \n            value = {name} \n            onChange = {(e) => {\n                setName(e.target.value);\n            }}\n        />\n        <input \n            value = {role} \n            onChange = {(e) => {\n                setRole(e.target.value);\n            }}\n        />\n        <input \n            value = {email} \n            onChange = {(e) => {\n                setEmail(e.target.value);\n            }}\n        />\n        <input \n            value = {linkedin} \n            onChange = {(e) => {\n                setLinkedin(e.target.value);\n            }}\n        />\n        <input type=\"file\" onChange={onFileChange}/>\n        <button onClick = {onUpdate}>Update</button>\n        <button onClick = {onDelete}>Delete</button>\n\n        \n    </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}